###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.31.1.20058 [Evaluation] for STM809/Apr/2016  19:38:04 #
# Copyright 2010-2012 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\sys\src #
#                    \main.c                                                  #
#    Command line =  D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\sys\src #
#                    \main.c -e --enable_multibytes -Ohz --debug              #
#                    --code_model small --data_model medium -o                #
#                    D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\Debug\O #
#                    bj\ --dlib_config "C:\Program Files\IAR                  #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\stm8\LIB\dlstm8smn.h" -lcN                    #
#                    D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\Debug\L #
#                    ist\ -I D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0 #
#                    /user/\ -I D:\ProjectPath\STMPath\CH79_A0_C-version\CH79 #
#                    _A0/user/src/\ -I D:\ProjectPath\STMPath\CH79_A0_C-versi #
#                    on\CH79_A0/user/inc/\ -I D:\ProjectPath\STMPath\CH79_A0_ #
#                    C-version\CH79_A0/addon/\ -I                             #
#                    D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0/addon/s #
#                    rc/\ -I D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0 #
#                    /addon/inc/\ -I D:\ProjectPath\STMPath\CH79_A0_C-version #
#                    \CH79_A0/sys/\ -I D:\ProjectPath\STMPath\CH79_A0_C-versi #
#                    on\CH79_A0/sys/inc/\ -I D:\ProjectPath\STMPath\CH79_A0_C #
#                    -version\CH79_A0/sys/src/\ -I                            #
#                    D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0/lib/\   #
#                    -I D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0/lib/ #
#                    src/\ -I D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A #
#                    0/lib/inc/\ --vregs 16                                   #
#    List file    =  D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\Debug\L #
#                    ist\main.lst                                             #
#    Object file  =  D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\Debug\O #
#                    bj\main.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

D:\ProjectPath\STMPath\CH79_A0_C-version\CH79_A0\sys\src\main.c
      1          //===2016-03-25pm
      2          //===2016-04-09pm
      3          //===C-version-git-control
      4          #include "stm8s.h"  
      5          #include "user.h"  
      6          #include "macro_def.h"  
      7          #include "iostm8s003f3.h"
      8          #include "bq769x0.h"
      9          
     10          //#define Uart_Model_Enable
     11          
     12          void main(void)
     13          { 
     14            uint8_t i = 0;
     15            //-----------------------------
     16            disableInterrupts();        // 关闭MCU全局变量
     17            SysInit();                  // 系统初始化，MCU时钟配置、ADC模块初始化
     18            PortInit();                 // MCU管脚配置
     19            //PC_ODR_ODR7 = 1;
     20            VCC1_ON();
     21            //LED2_ON();                // 复位后亮LED1，在完成AFE IC初始化之后，熄灭
     22            I2C_Model_Init();           // 启用MCU的IIC模块
     23          #ifdef Uart_Model_Enable
     24            Uart_Model_Init();          // 启用MCU的UART模块
     25          #endif
     26            Var_Init();                 // 初始化各变量值 
     27            Timer2Init();               // 设置TIMER 2为基准时间的定时器
     28            enableInterrupts();         // 打开MCU全局中断
     29            Delay_ms(20);               // 延时50mS，MCU稳定
     30            ClrWdt();                   // 启用看门狗
     31            Afe_Device_Init();          // 初始化AFE IC，包括开启ADC、电流检测模块、设置过放过充电芯电压值、放电过流、短路保护等参数 
     32            LED2_OFF();                 // 关闭LED1
     33            SOC_Init();                 // 利用EEPROM中保存数据或OCV初始化SOC数据
     34            //Soc_OCV_CorrectEn_Flag = 1; // 上电允许SOC的OCV校准 
     35            //Afe_ADC_Disable();        // 100+uA
     36            //Afe_Temp_Disable();       // 100+uA
     37            WorkMode = DISCHARGE_MODE;  
     38            DisExchangeMode_Cnt = 100;  
     39            Bits_flag.Bit.DisOv = 1;    
     40            //Bits_flag.Bit.DisTemp = 1; 
     41            DisTemp_cnt = 0;
     42            while(1)
     43            {
     44              //=========
     45              // 问题1：放电状态下，电芯电压处于过充时，BQ会自动关闭充电MOS管;   解决方案：放电状态下，重新设置硬件过充电压为4.3V
     46              // 问题2：充电状态下，电芯电压处于过放时，BQ会自动关闭放电MOS管;   解决方案：充电状态下，重新设置硬件过充电压为1.5V
     47              // 问题3：（充放电及空载识别问题）欠压状态下，插上充电器时，识别不了充电器;  
     48                        //解决方案：检测无Triger信号时，为空载模式; Triger信号范围在[]时，或检测到有负载信号、或放电电流 >= 10mA 时，为放电模式，否则为充电模式.
     49              // 问题4：BQ供给MCU的3.3V不稳定;
     50              // 问题5：拨出负载时，BQ有时会出现电流采样值变大的异常;
     51              // 问题6：
     52              ClrWdt();                          // 刷新看门狗 1.02S未刷新系统复位 
     53              
     54              Afe_Get_SysStatus();               // AFE IC 状态检测，包括充放电MOS管开关状态、电流采样结束状态、AFE IC（错误、过流、短路、过充、过放）异常状态
     55             
     56          #ifdef Uart_Model_Enable
     57              Uart_SendStr("\r\n");
     58              Uart_SendStr("\r\n SYS_STAT = ");   Uart_SendData(SYS_STAT.Byte,16);  
     59              Uart_SendStr(" SYS_CTRL1 = ");      Uart_SendData(SYS_CTRL1.Byte,16); 
     60              Uart_SendStr(" SYS_CTRL2 = ");      Uart_SendData(SYS_CTRL2.Byte,16);  
     61          #endif
     62              
     63              ModeCheck();         // 充电、放电、空载工作模式检测 
     64              
     65              ClearStatus();       // 各工作模式下的变量清零处理
     66              
     67              Afe_Volt_Val_Get();  // AFE IC 温度值、电芯电压值、电流值采样
     68              
     69              CurrentCheck();      // 电流异常检测
     70              
     71              VoltCheck();         // 电压异常检测
     72              
     73              TempCheck();         // 温度异常检测
     74              
     75              CellBal_Cntrl();     // 充电均衡控制管理
     76              
     77              ChgDis_AbnormalCheck();         // 充放电状态下出现电流异常
     78               
     79              Afe_FET_ChgDis_Cntrl();         // 充放电MOS管控制管理
     80              
     81              //Afe_AbnormalCheck();          // AFE IC 内部异常检测
     82              
     83              LedShow_Cntrl();     // LedShow_WorkMode();   // 工作电量指示灯显示
     84               
     85          #ifdef Uart_Model_Enable  
     86              
     87              Uart_SendStr(" Check_Val= ");     Uart_SendData((uint16_t)Check_Val,10);
     88              Uart_SendStr(" WorkMode= ");      Uart_SendData(WorkMode,16); 
     89              Uart_SendStr(" Bits_flag = ");    Uart_SendData(Bits_flag.Byte,16); 
     90               
     91              Uart_SendStr(" Current_Val= ");   Uart_SendData((uint16_t)Current_Val,10);
     92              Uart_SendStr(" Volt_Avg= ");      Uart_SendData(Cell_Volt_Avg,10);
     93              Uart_SendStr(" Max= ");           Uart_SendData(Cell_Volt_Max,10);
     94              Uart_SendStr(" Min= ");           Uart_SendData(Cell_Volt_Min,10);
     95                 
     96              Uart_SendStr(" soc_rt= ");        Uart_SendData((uint16_t)SocCalc.soc_rt,10); 
     97              Uart_SendStr(" ah= ");            Uart_SendData((uint16_t)SocReg.ah,10);
     98              Uart_SendStr(" CellBal = ");      Uart_SendData((uint16_t)CellBalance_Selct,16);  
     99              Uart_SendStr(" Temp_Val = ");     Uart_SendData((uint16_t)Temp_Val,10); 
    100              /*  
    101              Uart_SendStr("\r\n");
    102              for(i =0;i<10;i++)
    103              { 
    104                Uart_SendStr(" C_");
    105                Uart_SendData(i,10);
    106                Uart_SendStr("= ");
    107                Uart_SendData(Cell_Volt[i],10);
    108              } 
    109              */
    110          #endif 
    111              LowPower_Cntrl();        // 低功耗控制管理
    112            }    
    113           
    114          }
    115           
    116          
    117          
    118          
    119          
    120          
    121          
    122          
    123          
    124          
    125          
    126          
    127          
    128          

   Section sizes:

     Function/Label Bytes
     -------------- -----
     _A_PA_ODR         1
     _A_PC_ODR         1
     main             97

 
  2 bytes in section .near.noinit
 97 bytes in section .near_func.text
 
 97 bytes of CODE memory
  0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: 1
